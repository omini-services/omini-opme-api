name: 'Terraform setup and plan'
description: 'Setup Terraform and creates plan'
inputs:
  azure_client_id:
    description: 'Azure client id'
    required: true
  azure_tenant_id:
    description: 'Azure tenant id'
    required: true
  azure_subscription_id:
    description: 'Azure subscription id'
    required: true
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  terraform_version: 
    description: 'Terraform Version'
    required: true
    default: 1.8.4
  github_token: 
    description: 'GitHub token for auth'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: false

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraforom_version }}
        terraform_wrapper: false

    - id: 'auth'
      name: 'Authenticate to Azure'
      uses: 'azure/login@v2'
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}

    - name: Set OIDC Token
      shell: bash
      run: echo "ARM_OIDC_TOKEN=${{ steps.auth.outputs.oidc_token }}" >> $GITHUB_ENV

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        # name: ${{ inputs.pr_id }}-tf-plan
        name: tf-plan
        path: ${{ inputs.terraform_directory }}/tfplan

    # - name: Comment Plan
    #   id: comment-plan
    #   uses: peter-evans/create-or-update-comment@v2
    #   with:
    #     token: ${{ inputs.github_token }}
    #     issue-number: ${{ inputs.pr_id }}
    #     body: |
    #       Terraform Plan:

    #       ```
    #       ${{ steps.plan.outputs.plan }}
    #       ```

    #       Plan saved to GH artifacts.